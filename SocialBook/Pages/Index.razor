@page "/"
@using SocialBook.Models
@attribute [Authorize]
@inject PostService PostService
@inject PeopleService PeopleService
@inject IdentityService IdentityService

<PageTitle>Home</PageTitle>

<h1>Welcome, @userName!</h1>

<div class="container">
    <div class="row">
        <!-- Lewa kolumna: Dodawanie posta -->
        <div class="col-md-8">
            <h3>Create a new post</h3>
            <textarea class="form-control" @bind="newPostContent" placeholder="What's on your mind?"></textarea>
            <button class="btn btn-primary mt-2" @onclick="CreatePost">Post</button>

            <h3 class="mt-4">Latest Posts</h3>
            @if (posts == null)
            {
                <p>Loading posts...</p>
            }
            else if (posts.Count == 0)
            {
                <p>No posts yet. Be the first to post something!</p>
            }
            else
            {
                <ul class="list-group">
                    @foreach (var post in posts)
                    {
                        <li class="list-group-item">
                            <strong>@post.AuthorName</strong>: @post.Content
                        </li>
                    }
                </ul>
            }
        </div>

        <!-- Prawa kolumna: Lista znajomych -->
        <div class="col-md-4">
            <h3>People You May Know</h3>
            @if (suggestedFriends == null)
            {
                <p>Loading...</p>
            }
            else if (suggestedFriends.Count == 0)
            {
                <p>No new people to add.</p>
            }
            else
            {
                <ul class="list-group">
                    @foreach (var friend in suggestedFriends)
                    {
                        <li class="list-group-item d-flex justify-content-between align-items-center">
                            @friend.FullName
                            <button class="btn btn-success btn-sm" @onclick="() => AddFriend(friend.Id)">Add</button>
                        </li>
                    }
                </ul>
            }
        </div>
    </div>
</div>

@code {
    private string userName = "User";
    private List<PostDto> posts;
    private List<UserDto> suggestedFriends;
    private string newPostContent = "";

    private UserDto currentUser;

    protected override async Task OnInitializedAsync()
    {
        currentUser = await IdentityService.GetCurrentUser(); // ✅ Teraz wszystko działa
    }

    private async Task CreatePost()
    {
        if (!string.IsNullOrWhiteSpace(newPostContent))
        {
            await PostService.CreatePost(newPostContent);
            posts = await PostService.GetAllPosts(); // Odswieżenie postów
            newPostContent = "";
        }
    }

    private async Task AddFriend(string friendId)
    {
        await PeopleService.AddFriend(friendId);
        suggestedFriends = await PeopleService.GetSuggestedFriends();
    }
}
